CREATE TABLE Users (
    id INT GENERATED BY DEFAULT AS IDENTITY,
    email VARCHAR UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,
    firstname VARCHAR(255) NOT NULL,
    lastname VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL,
);

CREATE TABLE Sellers (
    sid NOT NULL PRIMARY KEY REFERENCES Users(id)
);

CREATE TABLE Category (
    name VARCHAR(255) NOT NULL PRIMARY KEY
);

-- For Products, I changed Image constraints to allow Nulls.

CREATE TABLE Products (
    pid INT NOT NULL PRIMARY KEY,
    seller_id NOT NULL REFERENCES Sellers(sid),
    name VARCHAR(255) UNIQUE NOT NULL,
    description VARCHAR (1023) NOT NULL,
    category NOT NULL REFERENCES Category(name),
    picture IMAGE(256),
    price FLOAT NOT NULL,
    quantity_available INTEGER NOT NULL,
    CHECK quantity_available >= 0
);

CREATE TABLE OrderInformation (
    oid INT NOT NULL PRIMARY KEY,
    uid INT NOT NULL REFERENCES User(id),
    time_purchased timestamp without time zone NOT NULL DEFAULT (current_timestamp AT TIME ZONE 'UTC')
);

-- I would argue price_per_unit should be removed.

CREATE ItemsInOrder (
    oid NOT NULL REFERENCES OrderInformation (oid),
    pid INT NOT NULL REFERENCES Products(pid),
    quantity INT NOT NULL, 
    price_per_unit FLOAT NOT NULL,
    fulfilled VARCHAR(32) NOT NULL,
    CHECK(status in ('Not Fulfilled', 'Fulfilled')
    PRIMARY KEY(oid, pid)
);
    -- TRIGGER if quantity becomes NULL row is deleted

CREATE TABLE ProductReview (
    buyer_id INT REFERENCES Users(id),
    product_id INT REFERENCES Products(pid)
    rating INT in (1, 2, 3, 4, 5) NOT NULL,
    review VARCHAR(1023),
    PRIMARY KEY(buyer_id, product_id)
);

CREATE TABLE SellerReview (
    buyer_id INT REFERENCES Users(id),
    seller_id INT REFERENCES Sellers(sid)
    rating INT in (1, 2, 3, 4, 5) NOT NULL,
    review VARCHAR(1023),
    PRIMARY KEY(buyer_id, seller_id)
);

CREATE TABLE CARTS (
    uid REFERENCES Users(uid),
    pid REFERENCES Products(pid),
    quantity INT NOT NULL 
    price_when_placed FLOAT NOT NULL,
    CHECK quantity > 0
    -- Check if Carts(pid).price_when_placed = Products(pid).price when refrenced
    -- if not equal show a message and update uid, pid, quantity, price_when_placed not null
);

-- Make check before insertion of reviews that user has purchase product/product from seller

-- Make check which prevents update of who a review is on.

-- Make check which prevents update of price per unit.


-- Added saved for later (same schema as )
